<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hiep.staff.mapper.StudentMapper">

	<!-- STUDENT -->

	<insert id="insertStudent">
		INSERT INTO student(class_id, name) VALUES (#{class_id}, #{name})
	</insert>
	
	<select id="getAllStudentByClassId"
		resultType="com.hiep.staff.entity.StudentEntity">
		select * from student where class_id = #{class_id} order by LEFT(SPLIT_PART(name, ' ', array_length(regexp_split_to_array(name, ' '), 1)), 1) ASC
	</select>
	
	<select id="getNameByClassIdAndStudentId"
        resultType="String">
    	select name from student where class_id = #{class_id} and id = #{id} 
	</select>
	
	<select id="getAllStudents" resultType="com.hiep.staff.entity.StudentEntity">
	    SELECT 
	        s.id AS student_id,
	        s."name" AS name,
	        c.classname AS classname,
	        s.class_id AS class_id,
	        s.created_at AS created_at
	    FROM 
	        public.student s
	    LEFT JOIN 
	        public."class" c ON s.class_id = c.id
	    <where>
	        <if test="classId != null"> 
	            AND s.class_id = #{classId}
	        </if>
	    </where>
	    ORDER BY created_at desc, classname desc
	</select>
		
	
	<select id="getStudentScoresByStudentIdAndClassId" resultType="com.hiep.staff.entity.ResultStudentEntity">
    SELECT s.id AS student_id, 
    s.name, 
    sc.lesson, 
    sc.max_score,
    sc.score, 
    sc.error, 
    sc.comment, 
    sc.created_at
    FROM student s
    JOIN score sc ON s.id = sc.student_id
    WHERE s.id = #{student_id} AND s.class_id = #{class_id}
    ORDER BY sc.lesson ASC
	</select>
	
	<select id="getCountStudenByName"
 		resultType="int">
		select count(*) from student where name = #{name} and class_id = #{class_id}
	</select>
	
	<delete id="deleteStudentByNameAndClassId">
        DELETE FROM student
        WHERE name = #{name}
          AND class_id = #{class_id}
    </delete>
	
	
</mapper>