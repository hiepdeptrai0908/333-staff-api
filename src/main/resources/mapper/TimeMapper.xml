<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hiep.staff.mapper.TimeMapper">

	<select id="getAllTime"
		resultType="com.hiep.staff.entity.TimeEntity">
		select * from checktime order by date_in desc

	</select>
	<select id="getTimeByTimeId"
		resultType="com.hiep.staff.entity.TimeEntity">

		select * from checktime where time_id = #{time_id}

	</select>

	<select id="checking" resultType="int">
		select count(*) from checktime
		where
		staff_id = #{staff_id} and
		time_out is null
	</select>



	<select id="getTimeDay" resultType="String">
		select time_in,date_in from checktime
		where
		staff_id = #{staff_id} and
		time_in is not null and
		time_out is null
	</select>
	
	<select id="getDateDay" resultType="String">
		select date_in from checktime
		where
		staff_id = #{staff_id} and
		time_in is not null and
		time_out is null
	</select>

	<select id="getToday"
		resultType="com.hiep.staff.entity.TimeEntity">
		select * from checktime where date_in = #{today} order by
		time_in desc	
	</select>

	<select id="getStatusOnline"
		resultType="com.hiep.staff.entity.TimeEntity">
		select * from checktime where status = 'online' order by
		time_in desc	
	</select>

	<select id="searchTimeByDate"
		resultType="com.hiep.staff.entity.TimeEntity">
		select * from checktime where date_in LIKE CONCAT (#{year}, '%')
			
			<if test="month != null">
				and date_in LIKE CONCAT (#{year},'-',#{month}, '%')
			</if>
			<if test="day != null">
				and date_in LIKE CONCAT (#{year},'-','%','-',#{day})
			</if>
			and status = 'offline'
			order by date_in asc, time_in asc
		<!-- date_in LIKE CONCAT (#{year},'-',#{month}, '%') -->

	</select>


	<!-- 出勤 -->
	<insert id="insertTimeIn">
		INSERT INTO checktime(
		staff_id,
		fullname,
		time_in,
		date_in,
		break_total,
		status
		) VALUES
		(
		#{staff_id},
		#{fullname},
		#{time_in},
		#{date_in},
		#{break_total},
		#{status}
		)
	</insert>

	<!-- 退勤 -->
	<update id="insertTimeOut">
		UPDATE checktime
		SET
		time_out = #{time_out},
		date_out =
		#{date_out},
		break_total = #{break_total},
		status = #{status},
		work_time
		= #{work_time},
		work_total = #{work_total}
		where staff_id = #{staff_id}
		and
		time_out is null
	</update>

	<!-- break1 -->
	<!-- 休憩開始 -->
	<update id="insertBreakIn1">
		UPDATE checktime
		SET
		break_in1 = #{break_in1}
		WHERE
		staff_id = #{staff_id} and
		time_out is null and
		break_in1 is null
	</update>

	<!-- 休憩終了 -->
	<update id="insertBreakOut1">
		UPDATE checktime
		SET
		break_out1 = #{break_out1},
		break_time1 = #{break_time1}
		WHERE
		staff_id = #{staff_id} and
		time_out is
		null and
		break_in1 is not null
	</update>

	<select id="checkBreaking1" resultType="int">
		select count(*) from
		checktime where
		staff_id = #{staff_id} and
		time_out is null and
		break_in1 is not null
	</select>

	<select id="checkBreakLast1" resultType="int">
		select count(*) from
		checktime where
		staff_id = #{staff_id} and
		time_out is null and
		break_in1 is not null and
		break_out1 is not null
	</select>

	<select id="getTimeBreakOneDay1" resultType="String">
		select break_in1
		from checktime where
		staff_id = #{staff_id} and
		time_in is not null and
		time_out is null and
		break_in1 is not null
	</select>

	<!-- break2 -->
	<select id="checkHasBreakTime1" resultType="int">
		select count(*) from
		checktime where
		staff_id = #{staff_id} and
		time_out is null and
		break_in1 is not null and
		break_time1 is not null
	</select>

	<select id="checkHasBreakIn2" resultType="int">
		select count(*) from
		checktime where
		staff_id = #{staff_id} and
		time_out is null and
		break_in1 is not null and
		break_time1 is not null and
		break_in2 is not
		null
	</select>

	<select id="checkHasBreakTime2" resultType="int">
		select count(*) from
		checktime where
		staff_id = #{staff_id} and
		time_out is null and
		break_in1 is not null and
		break_time1 is not null and
		break_in2 is not
		null and
		break_time2 is not null
	</select>
	
	<select id="searchTimeUser" resultType="com.hiep.staff.entity.TimeEntity">
		select * from checktime where staff_id = #{staff_id} and 
		date_in LIKE CONCAT (#{year},'-',#{month}, '%') order by date_in ASC
	</select>
	
	<select id="sumTime" resultType="com.hiep.staff.entity.WorkTotalEntity">
		SELECT work_total
		FROM checktime where staff_id = #{staff_id} and 	
		date_in LIKE CONCAT (#{year},'-',#{month}, '%') order by date_in ASC
	</select>
	
	<select id="totalMonthAll" resultType="com.hiep.staff.entity.WorkTotalEntity">
		SELECT work_total
		FROM checktime where 	
		date_in LIKE CONCAT (#{year},'-',#{month}, '%') order by date_in ASC
	</select>

	<update id="insertBreakIn2">
		UPDATE checktime
		SET
		break_in2 = #{break_in2}
		WHERE
		staff_id = #{staff_id} and
		time_out is null and
		break_in1 is not null
		and
		break_time1 is not null
	</update>

	<update id="insertBreakOut2">
		UPDATE checktime
		SET
		break_out2 = #{break_out2},
		break_time2 = #{break_time2}
		WHERE
		staff_id = #{staff_id} and
		time_out is
		null and
		break_in1 is not null and
		break_in2 is not null
	</update>

	<select id="getTimeBreakOneDay2" resultType="String">
		select break_in2
		from checktime where
		staff_id = #{staff_id} and
		time_out is null and
		break_in1 is not null and
		break_in2 is not null
	</select>

	<!-- break total -->
	<select id="getAllBreakTime"
		resultType="com.hiep.staff.entity.TimeEntity">
		select break_time1,break_time2 from checktime where
		staff_id = #{staff_id} and
		time_out is null and
		break_in1 is not null
		and
		break_time1 is not null
	</select>
	
	<!-- update time -->
	<select id="checkIsChangeBreakTotal" resultType="int">
		select count(break_total)
		from checktime where
		time_id = #{time_id} and
		break_total = #{break_total}
	</select>
	
	<update id="updateWhenIsChangeBreakTotal">
		UPDATE checktime
		SET
		staff_id = #{staff_id},
		fullname = #{fullname},
		time_in = #{time_in},
		time_out = #{time_out},
		date_in = #{date_in},
		date_out = #{date_out},
		break_in1 = null,
		break_out1 = null,
		break_time1 = null,
		break_in2 = null,
		break_out2 = null,
		break_time2 = null,
		break_total = #{break_total},
		work_time = #{work_time},
		work_total = #{work_total},
		update_time = #{update_time},
		update_date = #{update_date},
		update_user = #{update_user},
		status = #{status}
		WHERE
		time_id = #{time_id}
	</update>
	
	<update id="updateWhenNotChangeBreakTotal">
		UPDATE checktime
		SET
		staff_id = #{staff_id},
		fullname = #{fullname},
		time_in = #{time_in},
		time_out = #{time_out},
		date_in = #{date_in},
		date_out = #{date_out},
		work_time = #{work_time},
		work_total = #{work_total},
		update_time = #{update_time},
		update_date = #{update_date},
		update_user = #{update_user},
		status = #{status}
		WHERE
		time_id = #{time_id}
	</update>
	
	<delete id="deleteTime">
		delete from checktime where
		time_id = #{id}
	</delete>
	

</mapper>